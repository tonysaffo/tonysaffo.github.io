{"version":3,"sources":["sounds/menu.mp3","sounds/menu-click-2.mp3","img/bg1.jpg","sounds/scene-2/stalker.mp3","components/ui/modules/Scenes.js","components/ui/modules/AnimatedText.js","components/ui/elements/Containers.js","components/ui/elements/Links.js","components/ui/elements/Titles.js","components/scenes/SceneTpl.js","components/scenes/Scene1.js","App.js","_redux/slices/counterSlice.js","_themes/themes.js","_redux/slices/themeSlice.js","_redux/store.js","serviceWorker.js","_utils/Mixins.js","_utils/Global.js","index.js"],"names":["module","exports","SceneOverlay","styled","div","ParallaxWrapper","SceneBg","img","props","bg","Scene","children","paused","className","data","useState","currentSlide","setCurrentSlide","interval","setTimeout","changeSlide","clearTimeout","idx","findIndex","el","next","console","log","length","useEffect","onClick","text","iterations","effect","effectChange","effectDirection","Container","align","menuHover","UIfx","menuSound","volume","throttleMs","menuClick","menuSoundClick","NavLink","disabled","to","onMouseEnter","play","css","Title","h2","xxl","SceneTpl","sound","wrapperEl","useRef","bgLoaded","setBgLoaded","soundLoaded","setSoundLoaded","parallax","Parallax","current","disable","mediaLoaded","url","onLoad","playStatus","loop","ref","src","data-depth","Scene1","stalker","href","withRouter","location","TransitionGroup","CSSTransition","key","classNames","timeout","unmountOnExit","path","slice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","_default","lightTheme","darkTheme","spaces","xs","s","m","l","xl","imgWidth","colors","primary","grey","primary3","primary2","lightGrey","primaryDark","blue","primaryLight","primaryText","accent","deepOrange","light","success","accentLight","secondary","bgColor","danger","palette","main","theme","localStorage","getItem","setTheme","selectTheme","configureStore","reducer","counter","counterReducer","themeReducer","Boolean","window","hostname","match","mainFont","withSpaces","color","bgPrimary","flex","direction","justify","mt","mb","ml","mr","my","mx","GlobalStyle","createGlobalStyle","Root","useSelector","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.acc9aa05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.bd3337f7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/menu-click-2.ebb07d16.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bg1.94c42d5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stalker.be88bc27.mp3\";","import styled from \"styled-components\";\n\nexport const SceneOverlay = styled.div`\n  background: rgb(0, 0, 0);\n  z-index: 1;\n  background: linear-gradient(\n    82deg,\n    rgba(0, 0, 0, 1) 0%,\n    rgba(0, 0, 0, 0.788953081232493) 21%,\n    rgba(0, 0, 0, 0.2797093837535014) 49%,\n    rgba(0, 0, 0, 0.8085609243697479) 91%,\n    rgba(0, 0, 0, 1) 100%\n  );\n  width: 100%;\n  height: 100%;\n  position: absolute;\n`;\n\nexport const ParallaxWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n`;\n\nexport const SceneBg = styled.img`\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 0;\n  width: 110vw;\n  height: auto;\n  margin-left: -5vw;\n  margin-top: -5vh;\n  background-image: ${props => `url(${props.bg})`};\n`;\n\nexport const Scene = styled.div`\n  /* width: 1300px; */\n  margin: 0 auto;\n  text-align: center;\n  background-color: transparent;\n  height: 100vh;\n  overflow: hidden;\n  background-image: ${props => `url(${props.bg})`};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  z-index: 0;\n  .bg {\n  }\n  > .content {\n    z-index: 2;\n    height: 100%;\n    position: relative;\n  }\n  /* .parallax-wrapper {\n    z-index: 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    > .blur,\n    .overlay {\n      width: 100%;\n      height: 100%;\n      position: absolute;\n    }\n    > .blur {\n      width: 110vw;\n      height: 110vh;\n      z-index: 2;\n      margin-left: -5vw;\n      margin-top: -5vh;\n    }\n    > .overlay {\n      background: rgb(0, 0, 0);\n      z-index: 3;\n      background: linear-gradient(\n        82deg,\n        rgba(0, 0, 0, 1) 0%,\n        rgba(0, 0, 0, 0.788953081232493) 21%,\n        rgba(0, 0, 0, 0.2797093837535014) 49%,\n        rgba(0, 0, 0, 0.8085609243697479) 91%,\n        rgba(0, 0, 0, 1) 100%\n      );\n    }\n  }\n\n  > .content {\n    position: relative;\n    z-index: 1;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    height: 100%;\n    h1 {\n      color: white;\n      font-size: 8rem;\n      letter-spacing: 5px;\n      text-transform: uppercase;\n      font-weight: bold;\n      font-family: \"Amatic SC\", cursive;\n      text-shadow: 6px 6px 0px rgba(0, 0, 0, 0.2);\n    }\n    nav {\n      margin-top: 3rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      flex-direction: column;\n    }\n  } */\n\n  /* effect movie */\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { Random } from \"react-animated-text\";\nimport styled from \"styled-components\";\n// import TextyAnim from \"rc-texty\";\n\nexport const AnimatedTextBox = styled(\n  ({ children, paused, className, data }) => {\n    // const [slides, setSlides] = useState(data);\n    const [currentSlide, setCurrentSlide] = useState(data[0]);\n\n    // const [showBtns, setShowBtns] = useState(false);\n\n    let interval = setTimeout(() => changeSlide(), 5000);\n\n    const changeSlide = () => {\n      clearTimeout(interval);\n      interval = setTimeout(() => changeSlide(), 7000);\n      const idx = data.findIndex(el => el === currentSlide);\n      const next = data[data.findIndex(el => el === currentSlide) + 1];\n      console.log(next);\n      if (idx < data.length - 1) setCurrentSlide(next);\n      else {\n        // setShowBtns(true);\n        clearTimeout(interval);\n      }\n    };\n\n    useEffect(() => {\n      return () => clearTimeout(interval);\n    }, [interval]);\n\n    return (\n      <div className={className} onClick={changeSlide}>\n        <Random\n          text={currentSlide}\n          paused={false}\n          iterations={1}\n          effect=\"verticalFadeIn\"\n          effectChange={2}\n          effectDirection=\"up\"\n        />\n        {/* <TextyAnim onEnd={changeSlide}>{currentSlide}</TextyAnim> */}\n      </div>\n    );\n  }\n)`\n  font-size: 6rem;\n  color: white;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  text-align: ${props => props.align || null};\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n  /* color: white; */\n`;\n","import styled, { css } from \"styled-components\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport menuSound from \"../../../sounds/menu.mp3\";\nimport menuSoundClick from \"../../../sounds/menu-click-2.mp3\";\nimport UIfx from \"uifx\";\n\nconst menuHover = new UIfx(menuSound, {\n  volume: 0.2, // number between 0.0 ~ 1.0\n  throttleMs: 100\n});\nconst menuClick = new UIfx(menuSoundClick, {\n  volume: 0.2, // number between 0.0 ~ 1.0\n  throttleMs: 100\n});\n\nexport const NavLink = styled(({ className, children, disabled, to }) => (\n  <Link\n    to={to}\n    className={className}\n    onMouseEnter={() => disabled || menuHover.play()}\n    onClick={() => disabled || menuClick.play()}\n  >\n    {children}\n  </Link>\n))`\n  font-size: 4rem;\n  text-transform: uppercase;\n  letter-spacing: 5px;\n  color: white;\n  border-bottom: 4px solid transparent;\n  border-top: 4px solid transparent;\n  cursor: pointer;\n\n  &:hover {\n    border-bottom: 4px solid white;\n  }\n  ${props =>\n    props.disabled &&\n    css`\n      &:hover {\n        border-bottom: 4px solid transparent;\n        cursor: default;\n      }\n      color: #999;\n    `}\n`;\n","import styled, { css } from \"styled-components\";\n\nexport const Title = styled.h2`\n  letter-spacing: 5px;\n  text-transform: uppercase;\n  font-size: 8rem;\n  letter-spacing: 5px;\n  font-weight: bold;\n  font-family: \"Amatic SC\", cursive;\n  text-shadow: 6px 6px 0px rgba(0, 0, 0, 0.2);\n  ${props =>\n    props.xxl &&\n    css`\n      font-size: 7rem;\n    `}\n`;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { Scene, SceneOverlay, SceneBg, ParallaxWrapper } from \"../ui/modules\";\nimport { Container } from \"../ui/elements\";\nimport Parallax from \"parallax-js\";\nimport Sound from \"react-sound\";\n// import { SoundToggler } from \"../SoundToggler/SoundToggler\";\n\nexport const SceneTpl = ({ bg, sound, children, className }) => {\n  const wrapperEl = useRef(null);\n\n  const [bgLoaded, setBgLoaded] = useState(false);\n  const [soundLoaded, setSoundLoaded] = useState(false);\n\n  useEffect(() => {\n    const parallax = new Parallax(wrapperEl.current, {});\n    return () => {\n      parallax.disable();\n    };\n  }, []);\n\n  const mediaLoaded = bgLoaded && soundLoaded;\n\n  return (\n    <Scene>\n      {/* <SoundToggler /> */}\n      <Sound\n        url={sound}\n        onLoad={() => setSoundLoaded(true)}\n        playStatus=\"PLAYING\"\n        volume={30}\n        loop\n      />\n      <SceneOverlay />\n      <ParallaxWrapper ref={wrapperEl}>\n        <SceneBg src={bg} data-depth=\"0.10\" onLoad={() => setBgLoaded(true)} />\n      </ParallaxWrapper>\n\n      {mediaLoaded && <Container className=\"content\">{children}</Container>}\n    </Scene>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { SceneTpl } from \"./SceneTpl\";\nimport bg from \"../../img/bg1.jpg\";\nimport { Title, NavLink } from \"../ui/elements\";\nimport { Scene } from \"../ui/modules\";\nimport stalker from \"../../sounds/scene-2/stalker.mp3\";\n\nexport const Scene1 = styled(({ className }) => {\n  return (\n    <div className={`Scene ${className}`}>\n      <SceneTpl bg={bg} sound={stalker}>\n        <Title xxl>Опус пернатого</Title>\n        <nav>\n          <NavLink href=\"4\" to=\"/scene2\">\n            Начать историю\n          </NavLink>\n          <NavLink disabled to=\"/\">\n            Загрузить\n          </NavLink>\n        </nav>\n      </SceneTpl>\n    </div>\n  );\n})`\n  ${Scene} {\n    .content {\n      ${Title} {\n        color: white;\n        margin-bottom: 4rem;\n      }\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      nav {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n// import { Scene1 } from \"./components/scenes/Scene1\";\n// import { Scene2 } from \"./components/scenes/Scene2\";\nimport { Scene1 } from \"./components/scenes/Scene1\";\nimport { withRouter, Switch, Route } from \"react-router-dom\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nfunction App({ location, className }) {\n  console.log(location);\n  return (\n    <div className={`App ${className}`}>\n      <TransitionGroup>\n        <CSSTransition\n          key={location.key}\n          classNames=\"route-swipes\"\n          timeout={4500}\n          unmountOnExit={true}\n        >\n          <div className=\"swipe-container\">\n            <Switch>\n              {/* <Route path=\"/scene2\">\n                <Scene2></Scene2>\n              </Route> */}\n              <Route path=\"/\">\n                <Scene1 />\n              </Route>\n            </Switch>\n          </div>\n        </CSSTransition>\n      </TransitionGroup>\n    </div>\n  );\n}\n\nexport default withRouter(styled(App)`\n  /* transition: 1.5s; */\n  background-color: black;\n  .route-swipes-enter {\n    /* transform: translateX(100%); */\n    /* .overlay {\n      background-color: rgba(1, 1, 1, 1);\n    } */\n    opacity: 0;\n  }\n  .route-swipes-enter-active {\n    /* transform: translateX(0%); */\n    opacity: 1;\n    transition: all 4.5s;\n  }\n  .route-swipes-exit {\n    /* transform: translateX(0%); */\n    opacity: 1;\n\n    /* transition: 1.5s; */\n  }\n  .route-swipes-exit-active {\n    opacity: 1;\n    transition: all 0.5s;\n    /* transition: 1.5s; */\n  }\n`);\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const slice = createSlice({\r\n  name: \"counter\",\r\n  initialState: {\r\n    value: 0\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = slice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default slice.reducer;\r\n","/* eslint-disable no-unused-vars */\nimport {\n  deepOrange,\n  brown,\n  blueGrey,\n  cyan,\n  blue,\n  indigo,\n  grey\n} from \"@material-ui/core/colors\";\n\nconst _default = {};\nexport let lightTheme = {};\nexport let darkTheme = {};\n\n_default.spaces = {\n  \"0\": \"0\",\n  xs: \"0.5rem\",\n  s: \"0.9rem\",\n  m: \"1.5rem\",\n  l: \"2rem\",\n  xl: \"3rem\"\n};\n\n_default.imgWidth = {\n  s: \"5rem\",\n  m: \"10rem\",\n  l: \"15rem\",\n  xl: \"20rem\"\n};\n\nlightTheme = { ..._default };\nlightTheme.name = \"light\";\nlightTheme.colors = {\n  primary: \"#5e72ff\",\n  grey: grey[400],\n  primary3: \"#38d076\",\n  primary2: \"#46d9bb\",\n  lightGrey: grey[500],\n  primaryDark: blue[900],\n  primaryLight: blue[500],\n  primaryText: \"#222\",\n  accent: deepOrange[\"A400\"],\n  light: \"#eee\",\n  text: \"#9098A6\",\n  success: \"#70ffb3\",\n  accentLight: \"#fff2c7\",\n  secondary: \"#556275\",\n  bgColor: \"#FFF4CE\",\n  danger: \"tomato\"\n};\nlightTheme.palette = {\n  primary: {\n    main: lightTheme.colors.primary\n  },\n  secondary: {\n    main: lightTheme.colors.lightGrey\n  }\n};\n\ndarkTheme = { ..._default };\ndarkTheme.name = \"dark\";\ndarkTheme.colors = {\n  primary: \"white\",\n  accent: \"tomato\",\n  secondary: \"#999\",\n  bgColor: \"#333\",\n  danger: \"blue\"\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { lightTheme, darkTheme } from \"../../_themes\";\n\nexport const slice = createSlice({\n  name: \"theme\",\n  initialState: {\n    theme: localStorage.getItem(\"theme\") === \"dark\" ? darkTheme : lightTheme\n  },\n  reducers: {\n    setTheme: (state, action) => {\n      state.theme = action.payload;\n    }\n  }\n});\n\nexport const { setTheme } = slice.actions;\n\nexport const selectTheme = state => state.theme.theme;\n\nexport default slice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"./slices/counterSlice\";\r\nimport themeReducer from \"./slices/themeSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    theme: themeReducer\r\n  }\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { css } from \"styled-components\";\n\n// Font mixins\nexport const logoFont = css`\n  font-family: \"Cinzel\", serif;\n`;\n/* export const mainFont = css`\n  font-family: \"Arimo\", sans-serif;\n`; */\nexport const mainFont = css`\n  font-family: \"Amatic SC\", cursive;\n  /* font-family: \"Avenir\"; */\n`;\n\n// Color mixins\nexport const withColors = css`\n  color: ${props =>\n    props.theme.colors[props.color] || props.theme.colors.primaryText};\n  background-color: ${props =>\n    props.theme.colors[props.bgColor] || props.theme.colors.bgPrimary};\n`;\n\n// Other\nexport const withFlex = css`\n  ${props =>\n    props.flex &&\n    css`\n      display: flex;\n      flex-direction: ${props.flex.direction};\n      justify-content: ${props.flex.justify};\n      align-items: ${props.flex.align};\n    `}\n`;\nexport const withSpaces = css`\n  ${props =>\n    props.mt &&\n    css`\n      margin-top: ${props.theme.spaces[props.mt]};\n    `}\n  ${props =>\n    props.mb &&\n    css`\n      margin-bottom: ${props.theme.spaces[props.mb]};\n    `}\n  ${props =>\n    props.ml &&\n    css`\n      margin-left: ${props.theme.spaces[props.ml]};\n    `}\n  ${props =>\n    props.mr &&\n    css`\n      margin-right: ${props.theme.spaces[props.mr]};\n    `}\n  ${props =>\n    props.my &&\n    css`\n      margin: ${props.theme.spaces[props.my]} 0;\n    `}\n  ${props =>\n    props.mx &&\n    css`\n      margin: 0 ${props.theme.spaces[props.mx]};\n    `}\n`;\n\n/* export function fontFace(\n  name,\n  src,\n  fontWeight = \"normal\",\n  fontStyle = \"normal\"\n) {\n  return `\n      @font-face{\n          font-family: \"${name}\";\n          src: url(${require(\"./fonts/avenir/\" + src + \".eot\")});\n          src: url(${require(\"./fonts/avenir/\" +\n            src +\n            \".eot\")}?#iefix) format(\"embedded-opentype\"),\n               url(${require(\"./fonts/avenir/\" +\n                 src +\n                 \".woff\")}) format(\"woff\"),\n               url(${require(\"./fonts/avenir/\" +\n                 src +\n                 \".ttf\")}) format(\"truetype\")\n\n          font-style: ${fontStyle};\n          font-weight: ${fontWeight};\n      }\n  `;\n} */\n","import { createGlobalStyle } from \"styled-components\";\nimport { mainFont, withSpaces } from \"./Mixins\";\n\n// font-family: 'Seymour One', sans-serif;\n// font-family: 'Prosto One', cursive;\n// font-family: 'Amatic SC', cursive;\n// font-family: 'Lobster', cursive;\n// font-family: 'Caveat', cursive;\n\nexport const GlobalStyle = createGlobalStyle`\n  \n  h1, h2, h3, h4, h5 {\n    margin: 0;\n  }\n  body, html {\n    letter-spacing: 0.5px;\n    height: 100%;\n    margin: 0;\n    background-color: ${props => props.theme.colors.primaryText};\n    overflow: hidden;\n    @media screen and (max-width: 1024px){\n      overflow: auto;\n    }\n  }\n  html {\n    scroll-behavior: smooth;\n    font-size: 16px;\n    line-height: 1.3;\n    /* @media screen and (max-width: 1300px) {\n      font-size: 15px;\n    }\n    @media screen and (max-width: 1024px) {\n      font-size: 14px;\n    } */\n  }\n  body {\n    margin: 0;\n    color: ${props => props.theme.colors.primaryText};\n    ${mainFont}\n  }\n  a, button {\n    text-decoration: none;\n    cursor: pointer;\n  }\n  * {\n    box-sizing: border-box;\n    /* ${withSpaces} */\n    -webkit-overflow-scrolling: touch;\n    &::-webkit-scrollbar {\n      width: 0;\n    }\n  }\n  input, button, video {\n    outline: none;\n    ${mainFont};\n    \n  }\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n`;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./_redux/store\";\r\nimport { Provider, useSelector } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { selectTheme } from \"./_redux/slices/themeSlice\";\r\nimport { GlobalStyle } from \"./_utils\";\r\nimport { BrowserRouter as Router, withRouter } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nconst Root = withRouter(() => {\r\n  const theme = useSelector(selectTheme);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n      <GlobalStyle />\r\n    </ThemeProvider>\r\n  );\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Root />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}